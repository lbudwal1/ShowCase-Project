[{"D:\\Adam\\ShowCase-Project\\Front-End\\src\\index.tsx":"1","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reportWebVitals.ts":"2","D:\\Adam\\ShowCase-Project\\Front-End\\src\\app.tsx":"3","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\store.ts":"4","D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\webConfig.ts":"5","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\theme.ts":"6","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\main.tsx":"7","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\epic.ts":"8","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\reducers.ts":"9","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\routes.ts":"10","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\securedRoutes.tsx":"11","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\login.tsx":"12","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\forgotPassword.tsx":"13","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerReducer.ts":"14","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerEpic.ts":"15","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportReducer.ts":"16","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationEpic.ts":"17","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerEpic.ts":"18","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportEpic.ts":"19","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerReducer.ts":"20","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerReducer.ts":"21","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerReducer.ts":"22","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerEpic.ts":"23","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationReducer.ts":"24","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerEpic.ts":"25","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginReducer.ts":"26","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginEpics.ts":"27","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordEpic.ts":"28","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordRequestEpic.ts":"29","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordReducer.ts":"30","D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\authUtils.ts":"31","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginAccessors.ts":"32","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginActions.ts":"33","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\server.ts":"34","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\error404Page.tsx":"35","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\securedRoutesFunctions.tsx":"36","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\loading.tsx":"37","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\customerComponent.tsx":"38","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\loadingButton.tsx":"39","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\textField.tsx":"40","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\passwordTextField.tsx":"41","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\gridList.tsx":"42","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\paper.tsx":"43","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\grid.tsx":"44","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\errorBox.tsx":"45","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\buttons.tsx":"46","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\header\\header.tsx":"47","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordAccessor.ts":"48","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\epicUtils.ts":"49","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\endpoints.ts":"50","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordActions.ts":"51","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordConstants.ts":"52","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginConstants.ts":"53","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerAccessor.ts":"54","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\icons.tsx":"55","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerAccessor.ts":"56","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\toolTip.tsx":"57","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerAccessor.ts":"58","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\subComponents\\customerDetails.tsx":"59","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\header\\customerDropDown.tsx":"60","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerActions.ts":"61","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\logoutButton.tsx":"62","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\pagination.tsx":"63","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\requestStatusSnackbar.tsx":"64","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\subComponents\\customerList.tsx":"65","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerConstants.ts":"66","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerActions.ts":"67","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerActions.ts":"68","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportActions.ts":"69","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportAccessor.ts":"70","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerActions.ts":"71","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\fieldValidator.tsx":"72","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\dropDownMenu.tsx":"73","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerAccessor.ts":"74","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\snackBar.tsx":"75","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationAccessor.ts":"76","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationActions.ts":"77","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\dateTimePicker.tsx":"78","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\autoCompleteDropDown.tsx":"79","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerConstants.ts":"80","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerConstants.ts":"81","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportConstants.ts":"82","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerConstants.ts":"83","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\popper.tsx":"84","D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationConstants.ts":"85","D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\localStorage.ts":"86","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\publicActionWrapper.tsx":"87","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\card.tsx":"88"},{"size":472,"mtime":1613839515359,"results":"89","hashOfConfig":"90"},{"size":440,"mtime":1613839515396,"results":"91","hashOfConfig":"90"},{"size":1290,"mtime":1613839515359,"results":"92","hashOfConfig":"90"},{"size":2937,"mtime":1613839515394,"results":"93","hashOfConfig":"90"},{"size":1318,"mtime":1613839515397,"results":"94","hashOfConfig":"90"},{"size":1480,"mtime":1613855666518,"results":"95","hashOfConfig":"90"},{"size":653,"mtime":1613839515365,"results":"96","hashOfConfig":"90"},{"size":1095,"mtime":1613839515388,"results":"97","hashOfConfig":"90"},{"size":2458,"mtime":1613863058208,"results":"98","hashOfConfig":"90"},{"size":281,"mtime":1613839515366,"results":"99","hashOfConfig":"90"},{"size":3988,"mtime":1613839515366,"results":"100","hashOfConfig":"90"},{"size":9137,"mtime":1613856201468,"results":"101","hashOfConfig":"90"},{"size":10189,"mtime":1613839515363,"results":"102","hashOfConfig":"90"},{"size":2320,"mtime":1613863051152,"results":"103","hashOfConfig":"90"},{"size":1638,"mtime":1613863045230,"results":"104","hashOfConfig":"90"},{"size":889,"mtime":1613839515380,"results":"105","hashOfConfig":"90"},{"size":1765,"mtime":1613839515396,"results":"106","hashOfConfig":"90"},{"size":1753,"mtime":1613863011351,"results":"107","hashOfConfig":"90"},{"size":1631,"mtime":1613839515379,"results":"108","hashOfConfig":"90"},{"size":842,"mtime":1613839515381,"results":"109","hashOfConfig":"90"},{"size":852,"mtime":1613839515387,"results":"110","hashOfConfig":"90"},{"size":876,"mtime":1613839515386,"results":"111","hashOfConfig":"90"},{"size":1694,"mtime":1613839515387,"results":"112","hashOfConfig":"90"},{"size":1021,"mtime":1613839515396,"results":"113","hashOfConfig":"90"},{"size":1698,"mtime":1613839515385,"results":"114","hashOfConfig":"90"},{"size":1900,"mtime":1613839515393,"results":"115","hashOfConfig":"90"},{"size":4213,"mtime":1613839515393,"results":"116","hashOfConfig":"90"},{"size":3223,"mtime":1613839515390,"results":"117","hashOfConfig":"90"},{"size":1818,"mtime":1613839515391,"results":"118","hashOfConfig":"90"},{"size":2653,"mtime":1613839515391,"results":"119","hashOfConfig":"90"},{"size":1041,"mtime":1613839515397,"results":"120","hashOfConfig":"90"},{"size":1406,"mtime":1613839515392,"results":"121","hashOfConfig":"90"},{"size":2037,"mtime":1613839515392,"results":"122","hashOfConfig":"90"},{"size":5438,"mtime":1613839515394,"results":"123","hashOfConfig":"90"},{"size":1744,"mtime":1613839515361,"results":"124","hashOfConfig":"90"},{"size":416,"mtime":1613839515366,"results":"125","hashOfConfig":"90"},{"size":696,"mtime":1613839515370,"results":"126","hashOfConfig":"90"},{"size":6160,"mtime":1613862412003,"results":"127","hashOfConfig":"90"},{"size":1056,"mtime":1613839515370,"results":"128","hashOfConfig":"90"},{"size":3636,"mtime":1613839515375,"results":"129","hashOfConfig":"90"},{"size":1690,"mtime":1613839515373,"results":"130","hashOfConfig":"90"},{"size":662,"mtime":1613839515369,"results":"131","hashOfConfig":"90"},{"size":769,"mtime":1613839515372,"results":"132","hashOfConfig":"90"},{"size":1042,"mtime":1613839515369,"results":"133","hashOfConfig":"90"},{"size":604,"mtime":1613839515368,"results":"134","hashOfConfig":"90"},{"size":3522,"mtime":1613856590243,"results":"135","hashOfConfig":"90"},{"size":2425,"mtime":1613856552915,"results":"136","hashOfConfig":"90"},{"size":432,"mtime":1613839515389,"results":"137","hashOfConfig":"90"},{"size":771,"mtime":1613839515388,"results":"138","hashOfConfig":"90"},{"size":713,"mtime":1613839515388,"results":"139","hashOfConfig":"90"},{"size":2940,"mtime":1613839515389,"results":"140","hashOfConfig":"90"},{"size":929,"mtime":1613839515389,"results":"141","hashOfConfig":"90"},{"size":2588,"mtime":1613839515393,"results":"142","hashOfConfig":"90"},{"size":170,"mtime":1613839515386,"results":"143","hashOfConfig":"90"},{"size":49824,"mtime":1613860081519,"results":"144","hashOfConfig":"90"},{"size":168,"mtime":1613839515380,"results":"145","hashOfConfig":"90"},{"size":450,"mtime":1613839515376,"results":"146","hashOfConfig":"90"},{"size":340,"mtime":1613863020934,"results":"147","hashOfConfig":"90"},{"size":19397,"mtime":1613862953530,"results":"148","hashOfConfig":"90"},{"size":787,"mtime":1613839515363,"results":"149","hashOfConfig":"90"},{"size":1000,"mtime":1613863029091,"results":"150","hashOfConfig":"90"},{"size":1424,"mtime":1613839515365,"results":"151","hashOfConfig":"90"},{"size":6746,"mtime":1613839515372,"results":"152","hashOfConfig":"90"},{"size":3120,"mtime":1613839515374,"results":"153","hashOfConfig":"90"},{"size":5430,"mtime":1613862391215,"results":"154","hashOfConfig":"90"},{"size":3671,"mtime":1613862488660,"results":"155","hashOfConfig":"90"},{"size":1025,"mtime":1613839515387,"results":"156","hashOfConfig":"90"},{"size":927,"mtime":1613839515381,"results":"157","hashOfConfig":"90"},{"size":891,"mtime":1613839515379,"results":"158","hashOfConfig":"90"},{"size":301,"mtime":1613839515379,"results":"159","hashOfConfig":"90"},{"size":950,"mtime":1613839515384,"results":"160","hashOfConfig":"90"},{"size":2245,"mtime":1613839515369,"results":"161","hashOfConfig":"90"},{"size":2913,"mtime":1613839515368,"results":"162","hashOfConfig":"90"},{"size":174,"mtime":1613839515384,"results":"163","hashOfConfig":"90"},{"size":2742,"mtime":1613839515374,"results":"164","hashOfConfig":"90"},{"size":332,"mtime":1613839515395,"results":"165","hashOfConfig":"90"},{"size":988,"mtime":1613839515395,"results":"166","hashOfConfig":"90"},{"size":1869,"mtime":1613839515368,"results":"167","hashOfConfig":"90"},{"size":3480,"mtime":1613839515367,"results":"168","hashOfConfig":"90"},{"size":311,"mtime":1613862996052,"results":"169","hashOfConfig":"90"},{"size":202,"mtime":1613839515387,"results":"170","hashOfConfig":"90"},{"size":486,"mtime":1613839515379,"results":"171","hashOfConfig":"90"},{"size":284,"mtime":1613839515384,"results":"172","hashOfConfig":"90"},{"size":2375,"mtime":1613839515373,"results":"173","hashOfConfig":"90"},{"size":362,"mtime":1613839515395,"results":"174","hashOfConfig":"90"},{"size":3760,"mtime":1613839515397,"results":"175","hashOfConfig":"90"},{"size":2501,"mtime":1613856455848,"results":"176","hashOfConfig":"90"},{"size":321,"mtime":1613855487396,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"11okgru",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"D:\\Adam\\ShowCase-Project\\Front-End\\src\\index.tsx",[],["356","357"],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reportWebVitals.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\app.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\store.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\webConfig.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\theme.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\main.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\epic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\reducers.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\routes.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\securedRoutes.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\login.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\forgotPassword.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginEpics.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordRequestEpic.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordReducer.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\authUtils.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginAccessors.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\server.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\error404Page.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\securedRoutesFunctions.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\loading.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\customerComponent.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\loadingButton.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\textField.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\passwordTextField.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\gridList.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\paper.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\grid.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\errorBox.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\buttons.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\header\\header.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\epicUtils.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\endpoints.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\forgotPassword\\forgotPasswordConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\login\\loginConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\icons.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\toolTip.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\subComponents\\customerDetails.tsx",["358","359"],"import React, { ReactNode, PureComponent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { IDispatch, IStore } from \"../../redux/reducers\";\r\nimport { DOCTOR_TYPE, IGetCustomerRequest, IPatient } from \"../../redux/customer/customerConstants\";\r\nimport { LAPaperWithPadding } from \"../shared/paper\";\r\nimport styled from \"styled-components\";\r\nimport { MEDIA_QUERY_PHONE } from \"../shared/theme\";\r\nimport { ById, LaunchCodeApiResponse } from \"../shared/publicInterfaces\";\r\nimport LAGrid from \"../shared/grid\";\r\nimport LAGridItem from \"../shared/gridList\";\r\nimport LATextField from \"../shared/textField\";\r\nimport { hasPayload, isNotLoaded, Server } from \"../../redux/server\";\r\nimport { customerLoadAction } from \"../../redux/customer/customerActions\";\r\nimport { getCustomers } from \"../../redux/customer/customerAccessor\";\r\nimport { transportationLoadAction } from \"../../redux/transportation/transportationActions\";\r\nimport { getTransportations } from \"../../redux/transportation/transportationAccessor\";\r\nimport { ITransportationResponse } from \"../../redux/transportation/transportationConstants\";\r\nimport LAAutoComplete from \"../shared/autoCompleteDropDown\";\r\nimport LADateTimePicker from \"../shared/dateTimePicker\";\r\nimport { getAirports } from \"../../redux/airport/airportAccessor\";\r\nimport { IAirportResponse, IGetAirportRequest } from \"../../redux/airport/airportConstants\";\r\nimport { airportLoadAction } from \"../../redux/airport/airportActions\";\r\nimport { LASaveAndCancelButton } from \"../shared/buttons\";\r\nimport { ROUTE } from \"../routes\";\r\nimport { getAddCustomer } from \"../../redux/customer/addCustomer/addCustomerAccessor\";\r\nimport { addCustomerLoadAction } from \"../../redux/customer/addCustomer/addCustomerActions\";\r\nimport { IAddEditCustomerRequest } from \"../../redux/customer/addCustomer/addCustomerConstants\";\r\nimport { editCustomerLoadAction } from \"../../redux/customer/editCustomer/editCustomerActions\";\r\nimport { getEditCustomer } from \"../../redux/customer/editCustomer/editCustomerAccessor\";\r\nimport { FieldValidator, IFieldErrorKeyValue } from \"../shared/fieldValidator\";\r\n\r\ninterface ICustomerDetailsComponentStoreProps {\r\n    customerList: Server<LaunchCodeApiResponse<ById<IPatient>>>;\r\n    transPortationList: Server<ById<ITransportationResponse>>;\r\n    airportList: Server<ById<IAirportResponse>>;\r\n    addCustomer: Server<string>;\r\n    editCustomer: Server<string>;\r\n};\r\n\r\ninterface ICustomerDetailsComponentDispatchProps {\r\n    customerRequest: (data: IGetCustomerRequest) => unknown;\r\n    transportationRequest: () => unknown;\r\n    airportRequest: (data: IGetAirportRequest) => unknown;\r\n    addCustomerRequest: (data: IAddEditCustomerRequest) => unknown;\r\n    editCustomerRequest: (data: IAddEditCustomerRequest) => unknown;\r\n};\r\n\r\ninterface ICustomerDetailsOwnProps {\r\n    id: number;\r\n};\r\n\r\ninterface ICustomerDetailsComponentState {\r\n    details: IPatient;\r\n    airport: {\r\n        loadingAirports: boolean;\r\n        airportSearch: string;\r\n        airportList: ById<IAirportResponse>;\r\n    };\r\n    errors: ById<IFieldErrorKeyValue>;\r\n};\r\n\r\nconst CustomerDetailsStyles = styled.div`\r\n    margin: 40px 20px;\r\n    \r\n    @media only screen and (max-width: ${MEDIA_QUERY_PHONE}) {\r\n        margin: 15px 10px;\r\n     }\r\n`;\r\n\r\ntype ICustomerDetailsComponentProps =\r\n    RouteComponentProps\r\n    & ICustomerDetailsOwnProps\r\n    & ICustomerDetailsComponentStoreProps\r\n    & ICustomerDetailsComponentDispatchProps;\r\n\r\nclass CustomerDetails extends PureComponent<ICustomerDetailsComponentProps, ICustomerDetailsComponentState> {\r\n\r\n    public constructor(props: ICustomerDetailsComponentProps) {\r\n        super(props);\r\n        this.state = {\r\n            details: {\r\n                id: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                gender: \"\",\r\n                dateOfBirth: \"\",\r\n                occupations: [],\r\n                phones: [],\r\n                emails: [],\r\n                addresses: [],\r\n                websites: [],\r\n                type: DOCTOR_TYPE.FAMILY\r\n            },\r\n            airport: {\r\n                loadingAirports: false,\r\n                airportSearch: \"\",\r\n                airportList: {}\r\n            },\r\n            errors: {}\r\n        };\r\n        this.handleAirportSearch = this.debounce(this.handleAirportSearch, 100);\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        this.checkReduxState();\r\n        this.setAirportsToState();\r\n        this.errorsToState();\r\n    };\r\n\r\n    public componentDidUpdate(prevProps: ICustomerDetailsComponentProps): void {\r\n        if (this.props.customerList !== prevProps.customerList) {\r\n            this.checkReduxState();\r\n        }\r\n\r\n        if ((this.props.airportList !== prevProps.airportList)) {\r\n            this.setAirportsToState();\r\n        }\r\n    };\r\n\r\n    public render(): ReactNode {\r\n\r\n        const { details, airport, errors } = this.state;\r\n\r\n        return (\r\n            <CustomerDetailsStyles>\r\n                <LAPaperWithPadding>\r\n\r\n                    <LAGrid justify=\"space-evenly\" alignItems=\"center\" spacing={3}>\r\n\r\n                        <LAGridItem className=\"text-center mt-3\" xs={12} sm={12}>\r\n                            <strong>Travel Information</strong>\r\n                            <hr />\r\n                        </LAGridItem>\r\n\r\n                        {/* <LAGridItem xs={12} sm={6}>\r\n                            <LAAutoComplete\r\n                                dropDownPlaceHolder=\"Depature Airport\"\r\n                                multiple={false}\r\n                                getOptionLabel=\"name\"\r\n                                value={details.}\r\n                                defaultValue={details.depature}\r\n                                filterSelectedOptions={false}\r\n                                autoHighlight={true}\r\n                                onChange={this.handleDepatureChange}\r\n                                selectionRemove={() => undefined}\r\n                                onInputChange={this.onDepatureInputChange}\r\n                                option={Object.values(airport.airportList)}\r\n                                errorText={errors[\"depature\"] ? errors[\"depature\"].message : undefined}\r\n                            />\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            <LAAutoComplete\r\n                                dropDownPlaceHolder=\"Destination Airport\"\r\n                                multiple={false}\r\n                                getOptionLabel=\"name\"\r\n                                value={details.destination}\r\n                                defaultValue={details.destination}\r\n                                filterSelectedOptions={true}\r\n                                autoHighlight={true}\r\n                                loading={airport.loadingAirports}\r\n                                onChange={this.handleDestinationChange}\r\n                                selectionRemove={() => undefined}\r\n                                onInputChange={this.onDepatureInputChange}\r\n                                option={Object.values(airport.airportList)}\r\n                                errorText={errors[\"destination\"] ? errors[\"destination\"].message : undefined}\r\n                            />\r\n                        </LAGridItem> */}\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            <div className=\"text-center\">Depature Date</div><br />\r\n                            <LADateTimePicker showTime={false} value={details.dateOfBirth} onChange={(value: string) => this.handleDateChange(\"depatureDate\", value)} />\r\n                        </LAGridItem>\r\n\r\n                        {/* <LAGridItem xs={12} sm={6}>\r\n                            <LAAutoComplete\r\n                                dropDownPlaceHolder=\"Transportation\"\r\n                                multiple={false}\r\n                                getOptionLabel=\"name\"\r\n                                filterSelectedOptions={true}\r\n                                autoHighlight={true}\r\n                                onChange={this.handleTransChange}\r\n                                selectionRemove={() => undefined}\r\n                                option={hasPayload(this.props.transPortationList) ? Object.values(this.props.transPortationList.payload) : []}\r\n                                value={hasPayload(this.props.transPortationList) ? this.props.transPortationList.payload[details.transportationId] : []}\r\n                                defaultValue={hasPayload(this.props.transPortationList) ? this.props.transPortationList.payload[details.transportationId] : []}\r\n                            />\r\n                        </LAGridItem> */}\r\n\r\n                        <LAGridItem className=\"text-center mt-5\" xs={12} sm={12}>\r\n                            <strong>Client Information</strong>\r\n                            <hr />\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            <LATextField fullWidth={true}\r\n                                value={details.firstName}\r\n                                name=\"firstName\"\r\n                                label=\"First Name\"\r\n                                onChange={this.handleCustomerInfoChange}\r\n                                errorText={errors[\"firstName\"] ? errors[\"firstName\"].message : undefined}\r\n                            />\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            <LATextField\r\n                                fullWidth={true}\r\n                                value={details.lastName}\r\n                                name=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                onChange={this.handleCustomerInfoChange}\r\n                                errorText={errors[\"lastName\"] ? errors[\"lastName\"].message : undefined}\r\n                            />\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            {details.phones.map((q, index) => {\r\n                                return(\r\n                                    <LATextField\r\n                                    fullWidth={true}\r\n                                    value={q.number}\r\n                                    name=\"phoneNumber\"\r\n                                    label=\"Phone Number\"\r\n                                    onChange={this.handleCustomerInfoChange}\r\n                                    errorText={errors[\"phoneNumber\"] ? errors[\"phoneNumber\"].message : undefined}\r\n                                />\r\n                                )\r\n                            })}\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            {details.emails.map((q, index) => {\r\n                                return(\r\n                                    <LATextField\r\n                                    fullWidth={true}\r\n                                    value={q.address}\r\n                                    name=\"email\"\r\n                                    label=\"Email\"\r\n                                    type=\"email\"\r\n                                    onChange={this.handleCustomerInfoChange}\r\n                                    errorText={errors[\"email\"] ? errors[\"email\"].message : undefined}\r\n                                />\r\n                                )\r\n                            })}\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={6}>\r\n                            {details.addresses.map((q, index) => {\r\n                                return(\r\n                                    <LATextField\r\n                                    fullWidth={true}\r\n                                    value={q.addressLine1}\r\n                                    name=\"address\"\r\n                                    label=\"Address\"\r\n                                    onChange={this.handleCustomerInfoChange}\r\n                                    errorText={errors[\"address\"] ? errors[\"address\"].message : undefined}\r\n                                />\r\n                                )\r\n                            })}\r\n                        </LAGridItem>\r\n\r\n                        <LAGridItem xs={12} sm={12}>\r\n                            <LASaveAndCancelButton\r\n                                disableSave={Object.values(errors).length > 0 ? true : undefined}\r\n                                onCancel={this.handleBack}\r\n                                onSave={this.handleSave}\r\n                            />\r\n                        </LAGridItem>\r\n\r\n                    </LAGrid>\r\n\r\n                </LAPaperWithPadding>\r\n            </CustomerDetailsStyles>\r\n        );\r\n    }\r\n\r\n    private debounce = (fn: any, delay: any): any => {\r\n        let timer: any = null;\r\n        return (...args: any): any => {\r\n            const context = this;\r\n            timer && clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                fn.apply(context, args);\r\n            }, delay);\r\n        };\r\n    };\r\n\r\n    private onDepatureInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        this.setState({ airport: { ...this.state.airport, airportSearch: e.currentTarget.value } });\r\n        this.handleAirportSearch();\r\n    };\r\n\r\n    private handleAirportSearch = (): void => {\r\n        this.props.airportRequest({ Keywords: this.state.airport.airportSearch, PageNumber: 1, PageSize: 20 });\r\n    };\r\n\r\n    private handleCustomerInfoChange = (name: string, value: string) => {\r\n        let initialErrors = this.state.errors;\r\n        initialErrors = this.errorChecker(name, value, initialErrors, true, ((name === \"email\") ? true : undefined));\r\n\r\n        this.setState({\r\n            details: {\r\n                ...this.state.details,\r\n                [name]: value\r\n            },\r\n            errors: initialErrors\r\n        });\r\n    };\r\n\r\n    private handleDateChange = (name: string, value: string): void => {\r\n        this.setState({\r\n            details: {\r\n                ...this.state.details,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    private checkReduxState = (): void => {\r\n        if (hasPayload(this.props.customerList) && this.props.id > 0) {\r\n            const data = this.props.customerList.payload.objectsArray[this.props.id];\r\n            if (data === undefined) {\r\n                this.props.customerRequest({ Keywords: \"\", PageNumber: 1, PageSize: 1, deleted: false, id: this.props.id });\r\n            } else {\r\n                this.setState({ details: data });\r\n            }\r\n        };\r\n\r\n        if (isNotLoaded(this.props.customerList) && this.props.id > 0) {\r\n            this.props.customerRequest({ Keywords: \"\", PageNumber: 1, PageSize: 1, deleted: false, id: this.props.id });\r\n        };\r\n\r\n        if (isNotLoaded(this.props.transPortationList)) {\r\n            this.props.transportationRequest();\r\n        };\r\n\r\n        if (isNotLoaded(this.props.airportList)) {\r\n            this.props.airportRequest({ Keywords: \"\", PageNumber: 1, PageSize: 20 });\r\n            this.setState({ airport: { ...this.state.airport, loadingAirports: true } });\r\n        };\r\n    };\r\n\r\n    private setAirportsToState = (): void => {\r\n        if (hasPayload(this.props.airportList)) {\r\n            const currentList = this.state.airport.airportList;\r\n            const combineList = Object.assign(this.props.airportList.payload, currentList);\r\n            this.setState({\r\n                airport: {\r\n                    loadingAirports: false,\r\n                    airportSearch: \"\",\r\n                    airportList: combineList\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    private errorChecker = (name: string, value: string, errors: ById<IFieldErrorKeyValue>, isRequired: boolean, email?: true): ById<IFieldErrorKeyValue> => {\r\n        const result = FieldValidator(value, { required: isRequired ? true : undefined, minLength: 2, decimal: undefined, email });\r\n        const err: ById<IFieldErrorKeyValue> = errors;\r\n\r\n        if (result.length > 0) {\r\n            err[name] = { key: name, message: result };\r\n        } else {\r\n            delete err[name];\r\n        }\r\n        return err;\r\n    };\r\n\r\n    private handleSave = (): void => {\r\n        const data = this.state.details;\r\n        const errors = this.state.errors;\r\n        if (Object.values(errors).length === 0) {\r\n            if (data) {\r\n                // const requestBody: IAddEditCustomerRequest = {\r\n                    // id: data.id,\r\n                    // transportationId: data.transportationId,\r\n                    // depatureDate: data.depatureDate,\r\n                    // returnDate: data.returnDate,\r\n                    // numberOfTravellers: data.numberOfTravellers,\r\n                    // depatureId: data.depature.id,\r\n                    // destinationId: data.destination.id,\r\n                    // customer: data.customer\r\n                // };\r\n\r\n                // if (data.id !== 0) {\r\n                //     this.props.editCustomerRequest(requestBody);\r\n                // } else {\r\n                //     this.props.addCustomerRequest(requestBody);\r\n                // }\r\n                this.handleBack();\r\n            }\r\n        }\r\n    };\r\n\r\n    private handleBack = (): void => {\r\n        this.props.history.push(ROUTE.CUSTOMER.INDEX);\r\n    };\r\n\r\n    private errorsToState = (): void => {\r\n        if (isNaN(this.props.id)) {\r\n            const data = this.state.details;\r\n            let initialErrors = this.state.errors;\r\n            // initialErrors = this.errorChecker(\"address\", data.addresses, initialErrors, true);\r\n            initialErrors = this.errorChecker(\"firstName\", data.firstName, initialErrors, true);\r\n            initialErrors = this.errorChecker(\"lastName\", data.lastName, initialErrors, true);\r\n            // initialErrors = this.errorChecker(\"phoneNumber\", data.customer.phoneNumber, initialErrors, true);\r\n            // initialErrors = this.errorChecker(\"email\", data.customer.email, initialErrors, true);\r\n\r\n            this.setState({ errors: initialErrors });\r\n        }\r\n    };\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): ICustomerDetailsComponentStoreProps => ({\r\n    customerList: getCustomers(state),\r\n    transPortationList: getTransportations(state),\r\n    airportList: getAirports(state),\r\n    addCustomer: getAddCustomer(state),\r\n    editCustomer: getEditCustomer(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: IDispatch): ICustomerDetailsComponentDispatchProps => ({\r\n    customerRequest: (data: IGetCustomerRequest): unknown => dispatch(customerLoadAction(data)),\r\n    transportationRequest: (): unknown => dispatch(transportationLoadAction()),\r\n    airportRequest: (data: IGetAirportRequest): unknown => dispatch(airportLoadAction(data)),\r\n    addCustomerRequest: (data: IAddEditCustomerRequest): unknown => dispatch(addCustomerLoadAction(data)),\r\n    editCustomerRequest: (data: IAddEditCustomerRequest): unknown => dispatch(editCustomerLoadAction(data))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerDetails);","D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\header\\customerDropDown.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\logoutButton.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\pagination.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\requestStatusSnackbar.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\subComponents\\customerList.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\customerConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\fieldValidator.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\dropDownMenu.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\snackBar.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationAccessor.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationActions.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\dateTimePicker.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\autoCompleteDropDown.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\addCustomer\\addCustomerConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\editCustomer\\editCustomerConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\airport\\airportConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\customer\\deleteCustomer\\deleteCustomerConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\popper.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\redux\\transportation\\transportationConstants.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\utils\\localStorage.ts",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\publicActionWrapper.tsx",[],"D:\\Adam\\ShowCase-Project\\Front-End\\src\\reactComponents\\shared\\card.tsx",[],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":19,"column":8,"nodeType":"366","messageId":"367","endLine":19,"endColumn":22},{"ruleId":"364","severity":1,"message":"368","line":123,"column":26,"nodeType":"366","messageId":"367","endLine":123,"endColumn":33},"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"@typescript-eslint/no-unused-vars","'LAAutoComplete' is defined but never used.","Identifier","unusedVar","'airport' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]